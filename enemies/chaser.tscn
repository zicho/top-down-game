[gd_scene load_steps=6 format=2]

[ext_resource path="res://enemies/chaser.gd" type="Script" id=1]
[ext_resource path="res://gfx/player.png" type="Texture" id=2]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 8, 8 )

[sub_resource type="Animation" id=2]

length = 0.4
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("sprite:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0.96875, 1, 0, 1 ), Color( 1, 0, 0, 1 ), Color( 0.96875, 1, 0, 1 ) ]
}

[sub_resource type="CircleShape2D" id=3]

custom_solver_bias = 0.0
radius = 60.0

[node name="chaser" type="KinematicBody2D" index="0"]

position = Vector2( 48, 16 )
scale = Vector2( 1.5, 1.5 )
input_pickable = false
collision_layer = 4
collision_mask = 23
collision/safe_margin = 0.08
script = ExtResource( 1 )
_sections_unfolded = [ "Collision", "collision" ]

[node name="sprite" type="Sprite" parent="." index="0"]

self_modulate = Color( 0.96875, 1, 0, 1 )
texture = ExtResource( 2 )
_sections_unfolded = [ "Material", "Visibility" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="1"]

shape = SubResource( 1 )
_sections_unfolded = [ "Transform" ]

[node name="anim" type="AnimationPlayer" parent="." index="2"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/is_hit = SubResource( 2 )
blend_times = [  ]

[node name="detect_range" type="Area2D" parent="." index="3"]

input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
collision_layer = 32
collision_mask = 3
audio_bus_override = false
audio_bus_name = "Master"
_sections_unfolded = [ "Collision" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="detect_range" index="0"]

shape = SubResource( 3 )

[connection signal="body_entered" from="detect_range" to="." method="_on_detect_range_body_entered"]

[connection signal="body_exited" from="detect_range" to="." method="_on_detect_range_body_exited"]


